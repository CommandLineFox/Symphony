{"version":3,"file":"EeveeClient.js","sourceRoot":"","sources":["EeveeClient.ts"],"names":[],"mappings":";;;;;AAAA,2CAAgE;AAGhE,8EAAqD;AAGrD,MAAqB,WAAY,SAAQ,mBAAM;IAG3C,YAAY,MAA6E,EAAE,OAAuB;QAC9G,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;YACpB,IAAI,wBAAc,CAAE,IAAI,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,IAAU;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,CAAC,KAAa;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;CACJ;AAlBD,8BAkBC","sourcesContent":["import { Client, ClientOptions, User, Guild } from \"discord.js\";\r\nimport configTemplate from \"./Config\";\r\nimport { IFunctionType } from \"./ConfigHandler\";\r\nimport CommandHandler from \"./command/CommandHandler\"\r\ntype configTemplate = typeof configTemplate\r\n\r\nexport default class EeveeClient extends Client {\r\n    readonly config: { [key in keyof configTemplate]: IFunctionType<configTemplate[key]> };\r\n\r\n    constructor(config: { [key in keyof configTemplate]: IFunctionType<configTemplate[key]> }, options?: ClientOptions) {\r\n        super(options);\r\n        this.config = config;\r\n        this.once(\"ready\", () => {\r\n            new CommandHandler (this)\r\n        });\r\n    }\r\n\r\n    isOwner(user: User): boolean {\r\n        return this.config.owners.includes(user.id);\r\n    }\r\n    \r\n    getPrefix(guild?: Guild): string {\r\n        return this.config.prefix;\r\n    }\r\n}"]}